# MCP Binance Server Configuration
# Copy this file to .env and adjust values as needed

# ===========================================
# TRANSPORT & SERVER CONFIGURATION
# ===========================================

# Transport mode: 'http' for web/API access, 'stdio' for MCP client integration
TRANSPORT=http

# HTTP server configuration (only used when TRANSPORT=http)
PORT=8080
HOST=0.0.0.0

# Authentication token for HTTP endpoints (optional but recommended)
# Generate a strong random token: openssl rand -hex 32
AUTH_TOKEN=your-secret-token-here

# ===========================================
# LOGGING CONFIGURATION
# ===========================================

# Log level: trace, debug, info, warn, error, fatal
LOG_LEVEL=info

# ===========================================
# BINANCE API CONFIGURATION
# ===========================================

# Binance API credentials (OPTIONAL - for private endpoints in future)
# Currently not used as this server only accesses public market data
# Keep these read-only if you add them
# BINANCE_API_KEY=your_read_only_api_key
# BINANCE_SECRET_KEY=your_read_only_secret

# Binance API base URLs (usually don't need to change)
# BINANCE_SPOT_BASE_URL=https://api.binance.com
# BINANCE_FUTURES_BASE_URL=https://fapi.binance.com

# ===========================================
# RATE LIMITING & PERFORMANCE
# ===========================================

# Rate limiter settings (requests per second)
# Default: 10 requests per 10 seconds (600 requests per minute)
# Binance allows up to 1200 requests per minute for most endpoints
# RATE_LIMIT_REQUESTS=10
# RATE_LIMIT_WINDOW_SECONDS=10

# Request retry configuration
# RETRY_ATTEMPTS=3
# RETRY_BASE_DELAY_MS=300

# ===========================================
# CACHE CONFIGURATION
# ===========================================

# Cache TTL for different data types (in seconds)
# OHLCV_CACHE_TTL=30
# MARK_PRICE_CACHE_TTL=5
# FUNDING_RATE_CACHE_TTL=60
# OPEN_INTEREST_CACHE_TTL=30

# ===========================================
# SECURITY & CORS
# ===========================================

# CORS settings for web clients (if needed)
# CORS_ORIGIN=*
# CORS_METHODS=GET,POST,OPTIONS
# CORS_HEADERS=Content-Type,Authorization

# SSL/TLS settings (for HTTPS mode - usually handled by reverse proxy)
# SSL_CERT_PATH=/path/to/cert.pem
# SSL_KEY_PATH=/path/to/key.pem

# ===========================================
# MONITORING & HEALTH CHECKS
# ===========================================

# Health check endpoint configuration
# HEALTH_CHECK_ENABLED=true
# HEALTH_CHECK_PATH=/healthz

# Metrics collection (if implemented)
# METRICS_ENABLED=false
# METRICS_PORT=9090

# ===========================================
# DEPLOYMENT SPECIFIC
# ===========================================

# Environment designation
NODE_ENV=production

# Process title (useful for monitoring)
# PROCESS_TITLE=mcp-binance-server

# Timezone (for logging timestamps)
# TZ=UTC

# ===========================================
# EXAMPLES FOR DIFFERENT DEPLOYMENT SCENARIOS
# ===========================================

# For direct IP access (no domain):
# TRANSPORT=http
# PORT=8080
# HOST=0.0.0.0
# AUTH_TOKEN=super-secret-token-12345
# LOG_LEVEL=info

# For stdio mode (MCP client integration):
# TRANSPORT=stdio
# LOG_LEVEL=warn

# For development:
# TRANSPORT=http
# PORT=3000
# HOST=localhost
# AUTH_TOKEN=dev-token
# LOG_LEVEL=debug

# For production with reverse proxy:
# TRANSPORT=http
# PORT=8080
# HOST=127.0.0.1
# AUTH_TOKEN=production-secret-token
# LOG_LEVEL=info